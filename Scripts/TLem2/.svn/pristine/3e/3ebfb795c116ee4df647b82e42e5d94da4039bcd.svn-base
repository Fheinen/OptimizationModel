// 2.0
AnyFolder &PelvisSegRef = Pelvis;
PelvisSegRef = {
  AnyVar MassStandard = 10.65; 
  // There is not yet a scaling implemented for the pelvis inertia
  AnyVec3 Jii = {0.0221,0.01,0.0221}; //Taken from SimpleSpineModel 
  AnyVec3 Jij = {0,0,0};
  //AnyVec3 sCoM = {0.038, -0.050, 0.000000};
  AnyVec3 sCoM = {-0.0481,   -0.0356, 0.000000};
  //AnyVar PelvisWidth = 0.1686;
  
  //--> Folowing lines can be used for the definition of width and depth standards
  //AnyVar WidthStandard = 2*..Seg.Pelvis.Muscles.StdPar.HipJointTD[2];
  //AnyVar DepthStandard = vnorm({..Seg.Pelvis.Muscles.StdPar.AsisIpsilateral[0],..Seg.Pelvis.Muscles.StdPar.AsisIpsilateral[1],0.0}-{..Seg.Pelvis.Muscles.StdPar.PsisIpsilateral[0],..Seg.Pelvis.Muscles.StdPar.PsisIpsilateral[1],0.0});
  //<--
  
  //-->Following lines can be used for checking values after scaling
  //AnyVar Width = 2*..Seg.Pelvis.HipJoint.sRel[2];
  //AnyVar Depth = vnorm({..Seg.Pelvis.Muscles.ASIS.sRel[0],..Seg.Pelvis.Muscles.ASIS.sRel[1],0.0}-{..Seg.Pelvis.Muscles.PSIS.sRel[0],..Seg.Pelvis.Muscles.PSIS.sRel[1],0.0});
  //<--
  
  AnyVar Width = 0.1686071;
  AnyVar Depth = 0.1232004;
  
  //-->ABT_MJ
  AnyMat33 MirrorTF = { {1, 0, 0}, {0, 1, 0}, {0, 0, -1}};
  
  AnyMatrix points_RBF_right_unscaled = 
  {
    RASIS, 
    RPSIS, 
    {-0.0770765, 0.0570703, 0.10336}, 
    {0.0164355, -0.0806981, 0.0110494}, 
    {-0.0103923, -0.0329062, 0.0938362}, 
    {-0.0877652, -0.0796023, 0.048548}, 
    {-0.102216, -0.0342918, 0.0491473}, 
    {-0.0649984, -0.144497, 0.0447648}, 
    {-0.0592821, -0.016073, 0.0627444}, 
    {-0.03379859, -0.0806692, 0.08430356}, 
    {-0.0771875, -0.0325492, 0.0654021}, 
    {-0.0828707, -0.118961, 0.0565451}, 
    {-0.040343, -0.0974549, 0.0652989}, 
    {-0.0141569, -0.0833033, 0.0644491}, 
    {-0.0218072, -0.0553058, 0.0946857}, 
    {-0.0553988, -0.00490581, 0.0975676}, 
    {-0.0764754, 0.016602, 0.0604832}, 
    {-0.0613988, -0.0768777, 0.0913306}, 
    {-0.0599297, 0.0175119, 0.102227}, 
    {-0.0892843, 0.0171816, 0.0689041}, 
    {-0.112268, 0.0453343, 0.0625666} 
  };  
  
  AnyMatrix points_RBF_left_unscaled = points_RBF_right_unscaled * MirrorTF';
  
  AnyMatrix points_RBF_unscaled = arrcat(points_RBF_right_unscaled, points_RBF_left_unscaled);
    
//  AnyMatrix points_RBF_unscaled = 
//  {
//    RASIS, LASIS,
//    RPSIS, LPSIS,
//    //{-0.00079813, 0.00610338, 0.119659}, {-0.00079813, 0.00610338, 0.119659} * MirrorTF' ,
//    {-0.0770765, 0.0570703, 0.10336}, {-0.0770765, 0.0570703, 0.10336} * MirrorTF' ,
//    //{-0.126851, 0.0150218, 0.0419297}, {-0.126851, 0.0150218, 0.0419297} * MirrorTF' ,
//    {0.0164355, -0.0806981, 0.0110494}, {0.0164355, -0.0806981, 0.0110494} * MirrorTF' ,
//    {-0.0103923, -0.0329062, 0.0938362}, {-0.0103923, -0.0329062, 0.0938362} * MirrorTF' ,
//    {-0.0877652, -0.0796023, 0.048548}, {-0.0877652, -0.0796023, 0.048548} * MirrorTF' ,
//    {-0.102216, -0.0342918, 0.0491473}, {-0.102216, -0.0342918, 0.0491473} * MirrorTF' ,
//    {-0.0649984, -0.144497, 0.0447648}, {-0.0649984, -0.144497, 0.0447648} * MirrorTF' , 
//    {-0.0592821, -0.016073, 0.0627444}, {-0.0592821, -0.016073, 0.0627444} * MirrorTF' ,
//    {-0.03379859, -0.0806692, 0.08430356}, {-0.03379859, -0.0806692, 0.08430356} * MirrorTF' ,
//    {-0.0771875, -0.0325492, 0.0654021}, {-0.0771875, -0.0325492, 0.0654021} * MirrorTF' ,
//    {-0.0828707, -0.118961, 0.0565451}, {-0.0828707, -0.118961, 0.0565451} * MirrorTF' ,
//    {-0.040343, -0.0974549, 0.0652989}, {-0.040343, -0.0974549, 0.0652989} * MirrorTF' ,
//    {-0.0141569, -0.0833033, 0.0644491}, {-0.0141569, -0.0833033, 0.0644491} * MirrorTF' ,
//    {-0.0218072, -0.0553058, 0.0946857}, {-0.0218072, -0.0553058, 0.0946857} * MirrorTF' ,
//    {-0.0553988, -0.00490581, 0.0975676}, {-0.0553988, -0.00490581, 0.0975676} * MirrorTF' ,
//    {-0.0764754, 0.016602, 0.0604832}, {-0.0764754, 0.016602, 0.0604832} * MirrorTF' ,
//    {-0.0613988, -0.0768777, 0.0913306}, {-0.0613988, -0.0768777, 0.0913306} * MirrorTF' ,
//    {-0.0599297, 0.0175119, 0.102227}, {-0.0599297, 0.0175119, 0.102227} * MirrorTF' ,
//    {-0.0892843, 0.0171816, 0.0689041}, {-0.0892843, 0.0171816, 0.0689041} * MirrorTF' ,
//    {-0.112268, 0.0453343, 0.0625666}, {-0.112268, 0.0453343, 0.0625666} * MirrorTF'
//  };  
  //<--ABT_MJ
};

AnyFolder &ThighSegRef = Thigh;
ThighSegRef = {
  //AnyVec3 sCoM = {0.0101,-0.1596,-0.0150}*.TF';
    AnyVec3 sCoM = {-0.0081, 0.2220, 0.0191}*.TF';
AnyVar KneeWidth =  0.0975;
  AnyVar MassStandard = 7; //11.54; // kg, Klein Horsman dataset
  AnyVar LengthStandard = vnorm(..Seg.Thigh.StdPar.HipJoint-..Seg.Thigh.StdPar.KneeJoint);
  AnyVar LengthStandardForFibers = 0.4098;//**used for fiber length scaling** 
  AnyVar Density = 1000;
  
  AnyVar Length = vnorm(..Seg.Thigh.KneeJoint.sRel-..Seg.Thigh.HipJoint.sRel);
  AnyVar Radius = (..Seg.Thigh.Mass/(3.1416*Length*Density))^0.5;
  AnyVar Ixx = 0.25*..Seg.Thigh.Mass*Radius*Radius + 1/12*..Seg.Thigh.Mass*Length*Length;
  AnyVar Iyy = 0.5*..Seg.Thigh.Mass*Radius*Radius;
  AnyVar Izz = Ixx;
  AnyMat33 JM=..Seg.Thigh.ScalingNode.ARel*{{Ixx,0,0},{0,Iyy,0},{0,0,Izz}}*..Seg.Thigh.ScalingNode.ARel';
  AnyVec3 Jii = {JM[0][0], JM[1][1], JM[2][2]};
  AnyVec3 Jij = {JM[1][0], JM[2][1], JM[2][0]};

};

AnyFolder &PatellaSegRef = Patella;
PatellaSegRef = {
AnyVar MassStandard = 0;  
  AnyVar LengthStandard = 0;
  AnyVar Density = 1000;
  AnyVar Ixx = 0;
  AnyVar Iyy = 0;
  AnyVar Izz = Ixx;
  AnyVec3 Jii = {Ixx, Iyy, Izz};
  AnyVec3 Jij = {0,0,0};
};

AnyFolder &ShankSegRef = Shank;
ShankSegRef = {
  AnyVar MassStandard = 4.00;
  AnyVar Density = 1000;
  AnyVar LengthStandardForFibers = 0.4098;//**used for fiber length scaling
  AnyVar LengthStandard = vnorm(..Seg.Shank.StdPar.KneeJoint-..Seg.Shank.StdPar.AnkleJoint); 
  //AnyVec3 sCoM = {0.0088,0.2339,-0.0086}*.TF';
    AnyVec3 sCoM = {-0.0128, 0.2081, 0.0009}*.TF';

   AnyVar AnkleWidth =  0.0753;
  
  AnyVar Length = vnorm(..Seg.Shank.KneeJoint.sRel-..Seg.Shank.AnkleJoint.sRel);
  AnyVar Radius = (..Seg.Shank.Mass/(3.1416*Length*..StandardParameters.Shank.Density))^0.5;
  AnyVar Ixx = 0.25*..Seg.Shank.Mass*Radius*Radius + 1/12*..Seg.Shank.Mass*Length*Length;
  AnyVar Iyy = 0.5*..Seg.Shank.Mass*Radius*Radius;
  AnyVar Izz = Ixx; 
  AnyMat33 JM=..Seg.Shank.ScalingNode.ARel*{{Ixx,0,0},{0,Iyy,0},{0,0,Izz}}*..Seg.Shank.ScalingNode.ARel';
  AnyVec3 Jii = {JM[0][0], JM[1][1], JM[2][2]};
  AnyVec3 Jij = {JM[1][0], JM[2][1], JM[2][0]};
  
};

AnyFolder &TalusSegRef = Talus;
TalusSegRef = {
  AnyVar MassStandard = 0.2*1.3;
  AnyVar Density = 1000;
//  AnyVar LengthStandard = vnorm(.Talus.SubTalarJoint-.Talus.AnkleJoint);
//  AnyVar Length = vnorm(.Talus.SubTalarJoint-.Talus.AnkleJoint);

//  AnyVar LengthStandard = 0.03808687;//**used for fiber length scaling**
  AnyVar LengthStandard = 0.133*vnorm(..Seg.Foot.StdPar.BigToeNode-..Seg.Foot.StdPar.HeelNode);
  AnyVar Length = 0.133*vnorm(..Seg.Foot.BigToeNode.sRel-..Seg.Foot.HeelNode.sRel); 

  AnyVec3 sCoM = (..Seg.Talus.StdPar.SubTalarJoint + ..Seg.Talus.StdPar.AnkleJoint)/2;
  /// kg, 20% of Klein Horsman dataset Mass of Foot (% calculated from bone volume ratio);
  AnyVar Ixx = 2/5 * ..Seg.Talus.Mass * (vnorm(0.5*(..Seg.Talus.AnkleJoint.sRel - ..Seg.Talus.MedialMalleolus.sRel)))^2;
  AnyVar Iyy = Ixx;
  AnyVar Izz = Ixx;
  AnyVec3 Jii = {Ixx, Iyy, Izz};
  AnyVec3 Jij = {0,0,0};

};

AnyFolder &FootSegRef = Foot;
FootSegRef = {
  
  AnyVar MassStandard = 0.8*1.3;
  AnyVar LengthStandardForFibers = 0.285;//**used for fiber length scaling**
  AnyVar LengthStandard = vnorm(..Seg.Foot.StdPar.BigToeNode-..Seg.Foot.StdPar.HeelNode);
  AnyVar Density = 1000;
  //AnyVec3 sCoM = {0.0261, -0.0665,0.0159}*.TF';
    AnyVec3 sCoM = { 0.0509 , -0.0161  ,  0.0139  }*.TF';
  
  AnyVar Length = vnorm(..Seg.Foot.BigToeNode.sRel-..Seg.Foot.HeelNode.sRel); 
  AnyVar Radius = (..Seg.Foot.Mass/(3.1416*Length*Density))^0.5;
  AnyVar Ixx = 0.25*..Seg.Foot.Mass*Radius*Radius + 1/12*..Seg.Foot.Mass*Length*Length;
  AnyVar Iyy = 0.5*..Seg.Foot.Mass*Radius*Radius;
  AnyVar Izz = Ixx;
  AnyMat33 JM=..Seg.Foot.ScalingNode.ARel*{{Iyy,0,0},{0,Ixx,0},{0,0,Izz}}*..Seg.Foot.ScalingNode.ARel';
  AnyVec3 Jii = {JM[0][0], JM[1][1], JM[2][2]};
  AnyVec3 Jij = {JM[1][0], JM[2][1], JM[2][0]};
};